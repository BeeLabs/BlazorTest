@inherits BlazorComponent
@typeparam IItem
<ul class="tv">
    @foreach (var item in Dependents)
    {
        item.Depth = Depth;
        bool hasChildren = (item.Dependents != null && item.Dependents.Any());
        var children = item.Dependents as IEnumerable<INodeItem<IItem>>;
        IItem contentItem = (IItem)item;
        if (hasChildren && item.State == NodeState.Expanded)
        {
            <li class="tv-node">
                @OpenContent(contentItem)
                <TreeView Dependents="children" OpenContent="@OpenContent" ClosedContent="@ClosedContent" Depth="@(Depth + 1)" />
            </li>
        }
        else
        {
            <li class="tv-node">
                @ClosedContent(contentItem)
            </li>
        }
    }
</ul>
@functions
{
[Parameter] protected IEnumerable<INodeItem<IItem>> Dependents { get; set; }
[Parameter] protected RenderFragment<IItem> OpenContent { get; set; }
[Parameter] protected RenderFragment<IItem> ClosedContent { get; set; }
[Parameter] protected int Depth { get; set; }
}
