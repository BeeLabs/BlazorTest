@page "/drag"


@if (items == null)
{
    <div>Loading...</div>
}
else
{
    @foreach (var item in items)
    {

        <Draggable Class='@(item.Equals(dragItem) ? "btn btn-primary draggable-dragging" : item.Equals(dropItem) ? "btn btn-primary draggable-dropzone" : "btn btn-primary")'
                   Data="@item"
                   Context="CItem"
                   DragStarted="@DragStarted"
                   DragEnter="@DragEnter"
                   DragLeave="@DragLeave"
                   DragEnd="@DragEnd">
            <strong>@CItem</strong>
        </Draggable>
    }
}

@functions {
    List<string> items;
    string dragItem; // Item currently being dragged
    string dropItem; // Item being dropped on

    protected override void OnInit()
    {
        dropItem = "";
        dragItem = "";

        items = new List<string>() { "Tabs Are Best", "Spaces Rule!", "Who Cares?" };
    }

 
    void DragStarted(object draggedItem)
    {
        dragItem = draggedItem as string;
        StateHasChanged();
    }

    void DragEnter(object item)
    {
        dropItem = item as string;
        StateHasChanged();
    }

    void DragLeave(object item)
    {
        StateHasChanged();
    }

    void DragEnd()
    {
        if (dropItem != "")
        {
            DragDrop(dropItem);
        }
        dropItem = "";
        dragItem = "";
        StateHasChanged();

    }

    void DragDrop(object dropItem)
    {
        int first = items.FindIndex(s => s.Equals(dragItem));
        items.RemoveAt(first);
        int second = items.FindIndex(s => s.Equals(dropItem as string));
        items.Insert(second, dragItem);
        StateHasChanged();
    }
}